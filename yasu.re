 
= Webブラウザで3DCGが〇〇する可能性

 * この章では技術的な話は置いておいて、一般的な会社の業務に活用できないか？という点について記載します。

 * 突然ですがみなさん３ＤＣＧにどんなイメージを持っているでしょうか。
  ** ゲームとかメタバースにつかうんでしょ？
  ** 私の周りではこのようなイメージが多かったです。
  ** 確かにゲーム、メタバースは花形的な存在ですが、そのイメージがあるため「やってみよう！」というのはかなり少数派です。

 * Webブラウザで３DCGが表示できる。ということ
  ** ３ＤＣＧは縦、横、高さを基準にＣＧを描画します。
  ** これは現実世界の空間と同じなので、実は現実のデータを扱う際に有用なのではないか。エンターテイメント以外にももっと色々な可能性があるのではないでしょうか。
  ** 例えば本屋や図書館では、本を探すと本棚の番号で場所の案内をしてくれます。気が利いていれば、下図のような平面図付きですね。
  ** ここに【本屋の案内プリントイメージ】
  ** システムは、本棚にIDを付け、入荷した本をどのIDの本棚に置いたかをデータベースに記録し、本の場所を検索する時には格納した本棚のIDを調べ、表示します。
  ** この処理で一度、現実の「どこ」という情報は、IDなどのデータに置き換えられ、失われてしまっています。そのため、人間がデータを理解するためには案内板や図面で「IDｘｘの本棚がどこにあるか」を変換しながら場所を把握することになります。買い物くらいならいいですが、もっと大量のデータが相手になると大変なんですよね。

 * 位置情報が意味を持つ、物流倉庫での利用を考えてみる
  ** 今回はデータのうち、場所が重要な意味を持ち、かつ大量のデータを扱う必要がある物流倉庫での利用を考えてみます。
  ** まずは、目的を決める必要があります。倉庫の担当者が何のために使うか、ですね。
  ** というわけで、インターネットで情報収集します。「物流倉庫 効率化」と検索してやれば、効率化の為の３原則や、七つ道具　といった感じのメーカーさんの資料が沢山ありますので参考にさせていただきます。
  ** ここでは課題を単純にするために、ABC分析のみに着目する事にします。
 * ABC分析とは
  ** ABC分析とは、下記のような意味だそうです。（利用者で変わりますがAが重要なのは不変）
  *** A = 重要な、よく売れる商品
  *** B = 一時的に売れる商品
  *** C = 不人気商品
  ** 物流倉庫は広大で、そのためAの商品をどの棚に置き、Cの商品をどの棚に置くかで業務の効率が変わります。
  ** どういうことかというと、下記のような状態ですね。
  **  前提:A は100回/日の出荷がある商品とする。
  **       積込むトラックから近い棚は10m 遠い棚は100mとする。
  **  
  ** 悪い例【図】　Aが奥にある場合、100mダッシュを往復100回行うことになります。1日に20kmの移動ですね。
  ** 良い例【図】　Aがトラックの近くにある場合、10mダッシュを往復100回になるので、1日に2kmで済みます。
  ** Aの商品をどこに置くかがの「場所」が重要なのが判りますね。
 
 * 既存の倉庫管理のシステムはどうだろう？
  ** もう一度インターネットで情報収集します。今度は「物流倉庫　ABC分析」をイメージ検索します。
  ** いつくか、システムの画面が出てきたと思いますが、下図のような画面が多かったのではないでしょうか。
  *** 【Excelっぽい図】
  *** 【上から見た図】
  ** データベースの内容を表示したり、よく売れる商品をソートしたり、色を付けたグリッド状の票か、少し場所を意識して倉庫を上から見下ろした図面に色を付けたパターンがありますが、
  ** この図から　いまの倉庫にAの商品は適切に配置されているか判るでしょうか。
  ** 私には最低でも上からの図面で表示してくれないとイメージできません。


 * 倉庫の担当者には、何をどう見せるべきか

 * 要件を決める
 * 倉庫のレイアウトをそのまま３Dで表示する。保管棚も。
 * データ（商品名、場所（ｘｙｚ）、情報（出荷量、在庫量etc）
 * 商品は保管棚にBOXで表示する
 * 商品の出荷量や在庫量で、BOXの色を変更する
 * 商品の出荷量や在庫量で、BOXの高さを変更する
 
 * 画面に表示した結果
 * ABC分析を３D表示した結果の利点
 ** 出荷の多い商品が、倉庫の奥など取りにくい場所にあるか否かが一目でわかる
 ** 出荷の多い商品を入れ替える先の、取りやすい場所に出ない商品があるか一目でわかる
 　　（Ｇｒｉｄ表示との比較）
 ** ABC分析のみで考えた場合の理想の倉庫配置図

 * カメラ視点をFPS視点にすればVR
 ** HMDで棚卸作業にも

 * 終わりに 


==節のキャプション


===項のキャプション

====目のキャプション

=====段のキャプション

======小段のキャプション
===[column] コンパイラコンパイラ

コラムの内容

===[/column]

 * 第1の項目
 
 ** 第1の項目のネスト
 * 第2の項目
 ** 第2の項目のネスト
 * 第3の項目
  1. 第1の条件
 2. 第2の条件
 3. 第3の条件
  : Alpha
    DEC の作っていた RISC CPU。
    浮動小数点数演算が速い。

 : POWER
    IBM とモトローラが共同製作した RISC CPU。
    派生として POWER PC がある。

 : SPARC
    Sun が作っている RISC CPU。
    CPU 数を増やすのが得意。
   
    
//source[/hello/world.rb]{
puts "hello world!" # キャプションあり
//}
@<code>{p = obj.ref_cnt}
//lead{
本章ではまずこの本の概要について話し、
次にLinuxでプログラムを作る方法を説明していきます。
//}
